{"ast":null,"code":"var _jsxFileName = \"C:\\\\Resume Project\\\\solo-sparks\\\\frontend\\\\src\\\\pages\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport API from '../utils/api';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [form, setForm] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n  const navigate = useNavigate();\n  const handleRegister = async e => {\n    e.preventDefault();\n    try {\n      const {\n        data\n      } = await API.post('/auth/register', form);\n      localStorage.setItem('token', data.token);\n      navigate('/onboarding'); // First-time users go here\n    } catch {\n      alert('Registration failed. Email might be taken.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleRegister,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Username\",\n        required: true,\n        onChange: e => setForm({\n          ...form,\n          username: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        required: true,\n        onChange: e => setForm({\n          ...form,\n          email: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        required: true,\n        onChange: e => setForm({\n          ...form,\n          password: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '10px'\n      },\n      children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"XYImYdx6DwxFdVnHeGInDVx4Jcs=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","API","useNavigate","jsxDEV","_jsxDEV","Register","_s","form","setForm","username","email","password","navigate","handleRegister","e","preventDefault","data","post","localStorage","setItem","token","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","required","onChange","target","value","type","style","textAlign","marginTop","href","_c","$RefreshReg$"],"sources":["C:/Resume Project/solo-sparks/frontend/src/pages/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport API from '../utils/api';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Register = () => {\r\n  const [form, setForm] = useState({ username: '', email: '', password: '' });\r\n  const navigate = useNavigate();\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const { data } = await API.post('/auth/register', form);\r\n      localStorage.setItem('token', data.token);\r\n      navigate('/onboarding'); // First-time users go here\r\n    } catch {\r\n      alert('Registration failed. Email might be taken.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Create Account</h2>\r\n      <form onSubmit={handleRegister}>\r\n        <input\r\n          placeholder=\"Username\"\r\n          required\r\n          onChange={(e) => setForm({ ...form, username: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          onChange={(e) => setForm({ ...form, email: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          onChange={(e) => setForm({ ...form, password: e.target.value })}\r\n        />\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n      <p style={{ textAlign: 'center', marginTop: '10px' }}>\r\n        Already have an account? <a href=\"/\">Sign In</a>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}