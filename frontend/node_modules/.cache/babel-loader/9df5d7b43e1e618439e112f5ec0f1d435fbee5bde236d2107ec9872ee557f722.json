{"ast":null,"code":"var _jsxFileName = \"C:\\\\Resume Project\\\\solo-sparks\\\\frontend\\\\src\\\\pages\\\\ReflectionPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport API from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReflectionPage = () => {\n  _s();\n  const [form, setForm] = useState({\n    questId: '',\n    text: '',\n    imageUrl: '',\n    audioUrl: ''\n  });\n  const handleSubmit = async () => {\n    try {\n      await API.post('/reflections', form);\n      alert('Reflection submitted');\n    } catch {\n      alert('Submission failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Submit Reflection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Quest ID\",\n      onChange: e => setForm({\n        ...form,\n        questId: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Reflection Text\",\n      onChange: e => setForm({\n        ...form,\n        text: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Image URL\",\n      onChange: e => setForm({\n        ...form,\n        imageUrl: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Audio URL\",\n      onChange: e => setForm({\n        ...form,\n        audioUrl: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(ReflectionPage, \"ZQ9LX49YQVkKi1LiPeZhXteukAo=\");\n_c = ReflectionPage;\nexport default ReflectionPage;\nvar _c;\n$RefreshReg$(_c, \"ReflectionPage\");","map":{"version":3,"names":["React","useState","API","jsxDEV","_jsxDEV","ReflectionPage","_s","form","setForm","questId","text","imageUrl","audioUrl","handleSubmit","post","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","e","target","value","onClick","_c","$RefreshReg$"],"sources":["C:/Resume Project/solo-sparks/frontend/src/pages/ReflectionPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport API from '../utils/api';\r\n\r\nconst ReflectionPage = () => {\r\n  const [form, setForm] = useState({ questId: '', text: '', imageUrl: '', audioUrl: '' });\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      await API.post('/reflections', form);\r\n      alert('Reflection submitted');\r\n    } catch {\r\n      alert('Submission failed');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Submit Reflection</h2>\r\n      <input placeholder=\"Quest ID\" onChange={(e) => setForm({ ...form, questId: e.target.value })} />\r\n      <textarea placeholder=\"Reflection Text\" onChange={(e) => setForm({ ...form, text: e.target.value })} />\r\n      <input placeholder=\"Image URL\" onChange={(e) => setForm({ ...form, imageUrl: e.target.value })} />\r\n      <input placeholder=\"Audio URL\" onChange={(e) => setForm({ ...form, audioUrl: e.target.value })} />\r\n      <button onClick={handleSubmit}>Submit</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReflectionPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,GAAG,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC;IAAEQ,OAAO,EAAE,EAAE;IAAEC,IAAI,EAAE,EAAE;IAAEC,QAAQ,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAEvF,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMX,GAAG,CAACY,IAAI,CAAC,cAAc,EAAEP,IAAI,CAAC;MACpCQ,KAAK,CAAC,sBAAsB,CAAC;IAC/B,CAAC,CAAC,MAAM;MACNA,KAAK,CAAC,mBAAmB,CAAC;IAC5B;EACF,CAAC;EAED,oBACEX,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BhB,OAAA;MAAOiB,WAAW,EAAC,UAAU;MAACC,QAAQ,EAAGC,CAAC,IAAKf,OAAO,CAAC;QAAE,GAAGD,IAAI;QAAEE,OAAO,EAAEc,CAAC,CAACC,MAAM,CAACC;MAAM,CAAC;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChGhB,OAAA;MAAUiB,WAAW,EAAC,iBAAiB;MAACC,QAAQ,EAAGC,CAAC,IAAKf,OAAO,CAAC;QAAE,GAAGD,IAAI;QAAEG,IAAI,EAAEa,CAAC,CAACC,MAAM,CAACC;MAAM,CAAC;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvGhB,OAAA;MAAOiB,WAAW,EAAC,WAAW;MAACC,QAAQ,EAAGC,CAAC,IAAKf,OAAO,CAAC;QAAE,GAAGD,IAAI;QAAEI,QAAQ,EAAEY,CAAC,CAACC,MAAM,CAACC;MAAM,CAAC;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClGhB,OAAA;MAAOiB,WAAW,EAAC,WAAW;MAACC,QAAQ,EAAGC,CAAC,IAAKf,OAAO,CAAC;QAAE,GAAGD,IAAI;QAAEK,QAAQ,EAAEW,CAAC,CAACC,MAAM,CAACC;MAAM,CAAC;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClGhB,OAAA;MAAQsB,OAAO,EAAEb,YAAa;MAAAG,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAACd,EAAA,CAtBID,cAAc;AAAAsB,EAAA,GAAdtB,cAAc;AAwBpB,eAAeA,cAAc;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}